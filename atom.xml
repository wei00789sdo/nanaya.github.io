<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nanaya&#39;s Blog</title>
  
  <subtitle>随意评价他人是最大的傲慢</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-07T14:20:10.810Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>七夜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>滑动窗口</title>
    <link href="http://example.com/2021/04/07/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2021/04/07/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%AE%97%E6%B3%95/</id>
    <published>2021-04-07T12:37:16.000Z</published>
    <updated>2021-04-07T14:20:10.810Z</updated>
    
    <content type="html"><![CDATA[<h1 id="滑动窗口算法"><a href="#滑动窗口算法" class="headerlink" title="滑动窗口算法"></a>滑动窗口算法</h1><p>###使用场景<br>  滑动窗口算法通常用来解决字符串子串的搜索或数组的子数组的检索，可以减少时间复杂度,leetcode刷题中大量可见。</p><hr><p>###leetcode<br>    03<br>    Given a string s, find the length of the longest substring without repeating characters.<br>    Example 1:<br>    Input: s = “abcabcbb”<br>    Output: 3<br>    Explanation: The answer is “abc”, with the length of 3.</p><hr><p>###python3解法<br>    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; int:</span></span><br><span class="line">        savedchars=&#123;&#125;</span><br><span class="line">        start=max_length=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i] <span class="keyword">in</span> savedchars <span class="keyword">and</span> savedchars[s[i]] &gt;=start:</span><br><span class="line">                start=savedchars[s[i]]+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                max_length=<span class="built_in">max</span>(max_length,i-start+<span class="number">1</span>)</span><br><span class="line">            savedchars[s[i]]=i</span><br><span class="line">        <span class="keyword">return</span> max_length</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;滑动窗口算法&quot;&gt;&lt;a href=&quot;#滑动窗口算法&quot; class=&quot;headerlink&quot; title=&quot;滑动窗口算法&quot;&gt;&lt;/a&gt;滑动窗口算法&lt;/h1&gt;&lt;p&gt;###使用场景&lt;br&gt;  滑动窗口算法通常用来解决字符串子串的搜索或数组的子数组的检索，可以减少时间复杂度,</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>webP格式</title>
    <link href="http://example.com/2021/02/25/webP/"/>
    <id>http://example.com/2021/02/25/webP/</id>
    <published>2021-02-25T11:52:06.000Z</published>
    <updated>2021-02-25T12:25:55.157Z</updated>
    
    <content type="html"><![CDATA[<p>相当怠惰的某人终于动了起来。ヽ(ー_ー)ノ</p><p>webP格式是谷歌在2010年推出的新的图片格式。<br>目的是在降低图片大小的同时能保证一定的图片质量。</p><p>本人p站收藏夹很大，如果想都放在自己的博客上的话，虽然说Github并没有对gitpage空间进行限制，但是有听说空间使用达到1G有邮件发过来通知的说法。</p><p>实际使用效果惊人，在使用XnConvert进行70%质量压缩的情况下，以单个图片文件为例，JPG→webP： 1700K → 81k。</p><p>并且图片实际观感并不会很差，24寸屏幕下不仔细观察的话几乎无法分辨，目前博客正在使用的图片基本都以目前这个比例进行压缩了，体验超级棒！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;相当怠惰的某人终于动了起来。ヽ(ー_ー)ノ&lt;/p&gt;
&lt;p&gt;webP格式是谷歌在2010年推出的新的图片格式。&lt;br&gt;目的是在降低图片大小的同时能保证一定的图片质量。&lt;/p&gt;
&lt;p&gt;本人p站收藏夹很大，如果想都放在自己的博客上的话，虽然说Github并没有对gitpage空间</summary>
      
    
    
    
    <category term="实用技术" scheme="http://example.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="图片格式" scheme="http://example.com/tags/%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JPY_rate_monitor 日元汇率监控用脚本</title>
    <link href="http://example.com/2020/06/04/%E6%97%A5%E5%85%83%E6%B1%87%E7%8E%87%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/2020/06/04/%E6%97%A5%E5%85%83%E6%B1%87%E7%8E%87%E7%9B%91%E6%8E%A7/</id>
    <published>2020-06-04T13:21:27.000Z</published>
    <updated>2021-04-26T11:18:38.262Z</updated>
    
    <content type="html"><![CDATA[<p>由于自己没有意识加上懒，不知不觉日元汇率跌了这么多都不知道，如果明年打算回国的话，自己的存款一定得在一个高点兑换掉比较好。</p><p>想了想采取一个笨办法，写个脚本自动获取每天日元兑人民币的汇率，加入电脑开机启动，给一个设定值，达到了后就弹窗提醒我这种形式（不选择发邮件的形式是因为基本不看自己的邮箱ヽ(ー_ー)ノ）。</p><p>搜了一下找了个接口: <a href="https://api.exchangerate-api.com/v4/latest/JPY">https://api.exchangerate-api.com/v4/latest/JPY</a></p><p>会直接返回json格式的数据，处理起来很方便，python也只需要requests.get取一下即可。</p><p>由于是Win10系统，弹窗就用了win32api库，写好了直接丢启动文件里就行了。</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> win32api,win32con</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    time.sleep(<span class="number">60</span>)</span><br><span class="line">    response= requests.get(<span class="string">&quot;https://api.exchangerate-api.com/v4/latest/JPY&quot;</span>)</span><br><span class="line">    today_rate = Decimal(json.loads(response.text)[<span class="string">&quot;rates&quot;</span>][<span class="string">&quot;CNY&quot;</span>])</span><br><span class="line">    <span class="comment">##提醒OK消息框</span></span><br><span class="line">    <span class="keyword">if</span>(today_rate&gt;<span class="number">0.06</span>):</span><br><span class="line">        win32api.MessageBox(<span class="number">0</span>, <span class="built_in">str</span>(today_rate), <span class="string">&quot;今日日元汇率&quot;</span>,win32con.MB_OK)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于自己没有意识加上懒，不知不觉日元汇率跌了这么多都不知道，如果明年打算回国的话，自己的存款一定得在一个高点兑换掉比较好。&lt;/p&gt;
&lt;p&gt;想了想采取一个笨办法，写个脚本自动获取每天日元兑人民币的汇率，加入电脑开机启动，给一个设定值，达到了后就弹窗提醒我这种形式（不选择发邮件</summary>
      
    
    
    
    <category term="实用脚本" scheme="http://example.com/categories/%E5%AE%9E%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="脚本" scheme="http://example.com/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法(标题)</title>
    <link href="http://example.com/2020/06/02/Markdown%E8%AF%AD%E6%B3%95(%E6%A0%87%E9%A2%98)/"/>
    <id>http://example.com/2020/06/02/Markdown%E8%AF%AD%E6%B3%95(%E6%A0%87%E9%A2%98)/</id>
    <published>2020-06-02T14:25:49.000Z</published>
    <updated>2021-04-04T04:10:45.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这个是标题"><a href="#这个是标题" class="headerlink" title="这个是标题"></a>这个是标题</h1><p>嘛，这里主要用来留下一和一些技术相关的内容</p><p>千里之行，始于足下。</p><p>今天是值得纪念的博客开张的第一天，从Markdown的语法开始学起(๑╹ヮ╹๑)ﾉ Studying makes me happy<s>(カモシレナイ)</s>。</p><hr><h2 id="主标题："><a href="#主标题：" class="headerlink" title="主标题： =="></a>主标题： ==</h2><p>【语法】主标题文字 空行 ==（两个及以上）<br>【示例】<br>主标题文字（最高阶标题）<br>==<br>【说明】相当于H1大纲标题效果，一般在首行应用和表示</p><hr><h2 id="副标题："><a href="#副标题：" class="headerlink" title="副标题： "></a>副标题： </h2><p>【语法】副标题文字 （空行） —减号两个及以上<br>【示例】<br>副标题文字（第二阶标题）<br>–<br>【说明】相当于H2大纲标题效果</p><hr><p>H1~H6大纲标题<br>【语法】#（空格）文字 或 #（空格）文字 （空格）#） （1-6等级分别在文字前加对应数量#，后面的#为可选，不加效果也一样。<br>【示例】</p><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;这个是标题&quot;&gt;&lt;a href=&quot;#这个是标题&quot; class=&quot;headerlink&quot; title=&quot;这个是标题&quot;&gt;&lt;/a&gt;这个是标题&lt;/h1&gt;&lt;p&gt;嘛，这里主要用来留下一和一些技术相关的内容&lt;/p&gt;
&lt;p&gt;千里之行，始于足下。&lt;/p&gt;
&lt;p&gt;今天是值得纪念的博客开</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Markdown" scheme="http://example.com/tags/Markdown/"/>
    
  </entry>
  
</feed>
